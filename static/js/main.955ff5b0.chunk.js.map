{"version":3,"sources":["components/Api/Api.jsx","components/Button/Button.jsx","components/Container/Container .jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/Spinner/Spinner.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","fetchImg","a","query","perPage","currentPage","get","res","data","hits","propTypes","PropTypes","string","isRequired","number","Button","text","onLoadClick","className","type","onClick","Container","children","ImageGalleryItem","src","alt","largeImage","onImageClick","width","height","ImageGallery","map","id","webformatURL","tags","largeImageURL","modalRoot","document","querySelector","Modal","handleModalEscape","e","props","Onclose","window","removeEventListener","this","createPortal","onClose","handleBackdropClick","Component","Searchbar","state","handleChange","setState","target","value","handleSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","Spinner","color","App","modal","modalImage","isLoading","error","handleInputChange","trim","option","imageApi","then","result","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","handleModalOpen","addEventListener","keyCode","resetModal","currentTarget","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.955ff5b0.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst apikey = '22318307-8fc961fa8d00a621cd6d86864';\r\n\r\nconst fetchImg = async ({ query, perPage = 9, currentPage = 1 }) => {\r\n    const res = await axios.get(\r\n        `/?image_type=photo&orientation=horizontal&q=${query}&per_page=${perPage}&key=${apikey}&page=${currentPage}`,\r\n    );\r\n    return res.data.hits;\r\n};\r\n\r\nfetchImg.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchImg;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ text, onLoadClick }) => {\r\n    return (\r\n        <button className=\"btnLoadMore\" type=\"button\" onClick={onLoadClick}>\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onLoadClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => {\r\n    return <div className=\"Container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import '../../styles.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, largeImage, onImageClick }) => (\r\n    <img\r\n        src={src}\r\n        alt={alt}\r\n        width=\"300\"\r\n        height=\"300\"\r\n        onClick={() => onImageClick(largeImage)}\r\n        className=\"ImageGalleryItem-image\"\r\n    />\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n    onImageClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport '../../styles.css';\r\n\r\nconst ImageGallery = ({ hits, onImageClick }) => (\r\n    <ul className=\"ImageGallery\">\r\n        {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n            <li className=\"ImageGalleryItem\" key={id}>\r\n                <ImageGalleryItem\r\n                    src={webformatURL}\r\n                    alt={tags}\r\n                    largeImage={largeImageURL}\r\n                    onImageClick={onImageClick}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n            tags: PropTypes.string.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n    onImageClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    handleModalEscape = e => {\r\n        this.props.Onclose();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleModalEscape);\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div\r\n                className=\"Overlay\"\r\n                onClose={this.handleModalEscape}\r\n                onClick={this.props.handleBackdropClick}\r\n            >\r\n                <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../styles.css';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        value={this.state.query}\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => {\r\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\nimport imageApi from './components/Api';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\nimport Spinner from './components/Spinner';\n\nexport default class App extends Component {\n    state = {\n        query: '',\n        hits: [],\n        currentPage: 1,\n        modal: false,\n        modalImage: '',\n        isLoading: false,\n        error: null,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.query !== this.state.query) {\n            this.fetchImg();\n        }\n    }\n\n    handleInputChange = data => {\n        this.setState({ query: data.trim(), currentPage: 1, hits: [] });\n    };\n\n    fetchImg = () => {\n        const { query, currentPage } = this.state;\n        const option = { query, currentPage };\n        if (!query) return;\n\n        this.setState({ isLoading: true });\n\n        imageApi(option)\n            .then(result => {\n                this.setState(prevState => ({\n                    hits: [...prevState.hits, ...result],\n                    currentPage: prevState.currentPage + 1,\n                }));\n\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            })\n            .catch(error => this.setState({ error }))\n            .finally(() => {\n                this.setState({ isLoading: false });\n            });\n    };\n\n    handleModalOpen = largeImage => {\n        this.setState({ modal: true, modalImage: largeImage });\n        window.addEventListener('keydown', this.handleModalEscape);\n    };\n\n    handleModalEscape = e => {\n        if (e.keyCode === 27) this.resetModal();\n    };\n\n    handleBackdropClick = e => {\n        if (e.target === e.currentTarget) this.resetModal();\n    };\n\n    resetModal = () => {\n        this.setState({ modal: false, modalImage: '' });\n    };\n\n    render() {\n        const { hits, query, modal, modalImage, isLoading } = this.state;\n        const {\n            handleInputChange,\n            handleModalOpen,\n            fetchImg,\n            handleModalEscape,\n            handleBackdropClick,\n        } = this;\n        return (\n            <Container>\n                <Searchbar onSubmit={handleInputChange} />\n                {query && (\n                    <ImageGallery hits={hits} onImageClick={handleModalOpen} />\n                )}\n\n                {isLoading && <Spinner />}\n\n                {hits.length > 0 && (\n                    <Button onLoadClick={fetchImg} text=\"Load more\" />\n                )}\n\n                {modal && (\n                    <Modal\n                        onClose={handleModalEscape}\n                        handleBackdropClick={handleBackdropClick}\n                    >\n                        <img src={modalImage} alt=\"\" />\n                    </Modal>\n                )}\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}