{"version":3,"sources":["components/Api/Api.jsx","components/Button/Button.jsx","components/Container/Container .jsx","components/helpers/mapper.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/Spinner/Spinner.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","fetchImg","a","query","perPage","currentPage","get","res","data","hits","propTypes","PropTypes","string","isRequired","number","Button","text","onLoadClick","className","type","onClick","Container","children","mapper","images","map","id","webformatURL","largeImageURL","tags","ImageGalleryItem","src","alt","largeImage","onImageClick","width","height","ImageGallery","modalRoot","document","querySelector","Modal","handleModalEscape","e","props","modalClose","window","addEventListener","this","createPortal","handleBackdropClick","Component","Searchbar","state","handleChange","setState","target","value","handleSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","Spinner","color","App","modal","modalImage","isLoading","error","handleInputChange","trim","option","imageApi","then","result","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","loadMore","handleModalOpen","keyCode","resetModal","currentTarget","removeEventListener","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.232f9e6e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst apikey = '22318307-8fc961fa8d00a621cd6d86864';\r\n\r\nconst fetchImg = async ({ query, perPage = 9, currentPage = 1 }) => {\r\n    const res = await axios.get(\r\n        `/?image_type=photo&orientation=horizontal&q=${query}&per_page=${perPage}&key=${apikey}&page=${currentPage}`,\r\n    );\r\n    return res.data.hits;\r\n};\r\n\r\nfetchImg.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchImg;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ text, onLoadClick }) => {\r\n    return (\r\n        <button className=\"btnLoadMore\" type=\"button\" onClick={onLoadClick}>\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onLoadClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => {\r\n    return <div className=\"Container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const mapper = images => {\r\n    return images.map(({ id, webformatURL, largeImageURL, tags }) => ({\r\n        id,\r\n        webformatURL,\r\n        largeImageURL,\r\n        tags,\r\n    }));\r\n};\r\n\r\nmapper.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n};\r\n","import '../../styles.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, largeImage, onImageClick }) => (\r\n    <img\r\n        src={src}\r\n        alt={alt}\r\n        width=\"300\"\r\n        height=\"300\"\r\n        onClick={() => onImageClick(largeImage)}\r\n        className=\"ImageGalleryItem-image\"\r\n    />\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n    onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport '../../styles.css';\r\n\r\nconst ImageGallery = ({ hits, onImageClick }) => (\r\n    <ul className=\"ImageGallery\">\r\n        {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n            <li className=\"ImageGalleryItem\" key={id}>\r\n                <ImageGalleryItem\r\n                    src={webformatURL}\r\n                    alt={tags}\r\n                    largeImage={largeImageURL}\r\n                    onImageClick={onImageClick}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n            tags: PropTypes.string.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n    onImageClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleModalEscape);\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     window.removeEventListener('keydown', this.handleModalEscape);\r\n    // }\r\n\r\n    handleModalEscape = e => {\r\n        this.props.modalClose(e);\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.props.handleBackdropClick}>\r\n                <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n\r\n    static propTypes = {\r\n        handleBackdropClick: PropTypes.func.isRequired,\r\n        children: PropTypes.node,\r\n    };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport '../../styles.css';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        value={this.state.query}\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n    static propTypes = {\r\n        handleSubmit: PropTypes.func,\r\n    };\r\n}\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => {\r\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport imageApi from './components/Api';\r\nimport Button from './components/Button';\r\nimport Container from './components/Container';\r\nimport { mapper } from './components/helpers/mapper';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\nimport Searchbar from './components/Searchbar';\r\nimport Spinner from './components/Spinner';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        query: '',\r\n        hits: [],\r\n        currentPage: 1,\r\n        modal: false,\r\n        modalImage: '',\r\n        isLoading: false,\r\n        error: null,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { currentPage, query } = this.state;\r\n\r\n        if (prevState.query !== query) {\r\n            this.fetchImg();\r\n        }\r\n        if (prevState.currentPage !== currentPage) {\r\n            this.fetchImg(currentPage);\r\n        }\r\n    }\r\n\r\n    handleInputChange = data => {\r\n        this.setState({ query: data.trim(), currentPage: 1, hits: [] });\r\n    };\r\n\r\n    fetchImg = () => {\r\n        const { query, currentPage } = this.state;\r\n        const option = { query, currentPage };\r\n        if (!query) return;\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        imageApi(option)\r\n            .then(result => {\r\n                this.setState(prevState => ({\r\n                    hits: [...prevState.hits, ...mapper(result)],\r\n                }));\r\n\r\n                window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error }))\r\n            .finally(() => {\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    loadMore = () => {\r\n        let { currentPage } = this.state;\r\n        currentPage += 1;\r\n        this.setState({ currentPage });\r\n    };\r\n\r\n    handleModalOpen = largeImage => {\r\n        this.setState({ modal: true, modalImage: largeImage });\r\n    };\r\n\r\n    handleModalEscape = e => {\r\n        if (e.keyCode === 27) this.resetModal();\r\n    };\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) this.resetModal();\r\n    };\r\n\r\n    resetModal = () => {\r\n        this.setState({ modal: false, modalImage: '' });\r\n        window.removeEventListener('keydown', this.handleModalEscape);\r\n    };\r\n\r\n    render() {\r\n        const { hits, query, modal, modalImage, isLoading } = this.state;\r\n        const {\r\n            handleInputChange,\r\n            handleModalOpen,\r\n            handleModalEscape,\r\n            handleBackdropClick,\r\n            loadMore,\r\n        } = this;\r\n\r\n        return (\r\n            <Container>\r\n                <Searchbar onSubmit={handleInputChange} />\r\n                {query && (\r\n                    <ImageGallery hits={hits} onImageClick={handleModalOpen} />\r\n                )}\r\n\r\n                {isLoading && <Spinner />}\r\n\r\n                {hits.length > 0 && (\r\n                    <Button onLoadClick={loadMore} text=\"Load more\" />\r\n                )}\r\n\r\n                {modal && (\r\n                    <Modal\r\n                        modalClose={handleModalEscape}\r\n                        handleBackdropClick={handleBackdropClick}\r\n                    >\r\n                        <img src={modalImage} alt=\"\" />\r\n                    </Modal>\r\n                )}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}